{"version":3,"file":"js/main.a4fd4d9b.js","mappings":"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","sources":["webpack://test_med/./src/Components/Landing_Page/LandingPage.js","webpack://test_med/./src/config.js","webpack://test_med/./src/Components/Sign_Up/SignUp.js","webpack://test_med/./src/Components/Login/Login.js","webpack://test_med/./src/Components/FindDoctorSearch/FindDoctorSearch.js","webpack://test_med/./src/Components/AppointmentForm/AppointmentFormIC.js","webpack://test_med/./src/Components/DoctorCard/DoctorCard.js","webpack://test_med/./src/Components/InstantConsultation/InstantConsultation.js","webpack://test_med/./src/Components/BookingConsultation.js","webpack://test_med/./src/Components/Navbar/Navbar.js","webpack://test_med/./src/Components/Notification/Notification.js","webpack://test_med/./src/Components/ReviewForm/FormFeedBack.js","webpack://test_med/./src/Components/ReviewForm/ReviewForm.js","webpack://test_med/./src/Components/ProfileCard/ProfileCard.js","webpack://test_med/./src/Components/ReportsLayout/ReportLayout.js","webpack://test_med/./src/Components/ReportsLayout/ReportsLayout.js","webpack://test_med/./src/App.js","webpack://test_med/./src/reportWebVitals.js","webpack://test_med/./src/index.js"],"sourcesContent":["import './LandingPage.css'\nimport React from \"react\";\n\nconst Landing_Page = () => {\n    return (\n        <section className=\"hero-section\">\n          <div>\n            <div data-aos=\"fade-up\" className=\"flex-hero\">\n\n                <h1>\n                  Your Health<br/>\n                  <span className=\"text-gradient\">\n\n                    Our Responsibility\n                  </span>\n                </h1>\n                  <div className=\"blob-cont\">\n                      <div className=\"blue blob\"></div>\n                  </div>\n                  <div className=\"blob-cont\">\n                      <div className=\"blue1 blob\"></div>\n                  </div>\n                <h4>\n                  Lorem, ipsum dolor sit amet consectetur adipisicing elit. Eaque at quae ducimus. Suscipit omnis quibusdam non cum rem voluptatem! \n                </h4>\n                <a href=\"#services\">\n                  <button className=\"button\">Get Started</button>\n                </a>\n\n            </div>\n    \n          </div>\n        </section>\n    )\n}\n\nexport default Landing_Page","export const API_URL = \"https://joelmagdielr-8181.theiadockernext-1-labs-prod-theiak8s-4-tor01.proxy.cognitiveclass.ai/\";\r\nconsole.log(\r\n    \"API_URL :\",\r\n    API_URL\r\n);","import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./Sign_Up.css\";\nimport { API_URL } from \"../../config\";\n\nconst SignUp = () => {\n  const navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [password, setPassword] = useState('');\n\n\n  // --- Estado del formulario y errores ---\n  const [formData, setFormData] = useState({\n    name: \"\",\n    phone: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [errors, setErrors] = useState({});\n  const [showErr, setShowErr] = useState(\"\");\n\n\n  // --- Validación local ---\n  const validate = () => {\n    const newErrors = {};\n    if (!formData.name.trim()) {\n      newErrors.name = \"El nombre es obligatorio.\";\n    }\n    if (!/^\\d{10}$/.test(formData.phone)) {\n      newErrors.phone = \"El número de teléfono debe tener exactamente 10 dígitos.\";\n    }\n    if (!formData.email.includes(\"@\")) {\n      newErrors.email = \"El correo electrónico debe ser válido.\";\n    }\n    if (formData.password.length < 6) {\n      newErrors.password = \"La contraseña debe tener al menos 6 caracteres.\";\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // --- Envío y llamada al API ---\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!validate()) return;\n\n    try {\n      const res = await fetch(`${API_URL}/api/auth/register`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(formData),\n      });\n      const json = await res.json();\n\n      if (json.authtoken) {\n        // Éxito: guardar token y datos, redirigir y recargar\n        sessionStorage.setItem(\"auth-token\", json.authtoken);\n        sessionStorage.setItem(\"email\", email);\n        sessionStorage.setItem(\"phone\", phone);\n        sessionStorage.setItem(\"name\", name);\n        navigate(\"/\");\n        window.location.reload();\n      } else {\n        // Mostrar errores del servidor\n        if (json.errors) {\n          // Array de errores de express-validator\n          setShowErr(json.errors.map((err) => err.msg).join(\" \"));\n        } else {\n          setShowErr(json.error || \"Error desconocido\");\n        }\n      }\n    } catch (err) {\n      setShowErr(\"No se pudo conectar con el servidor.\");\n    }\n  };\n\n  return (\n    <div>\n      \n\n      <div className=\"container\" style={{ marginTop: \"5%\" }}>\n        <div className=\"signup-grid\">\n          <div className=\"signup-text\">\n            <h1>Registrarse</h1>\n          </div>\n          <div className=\"signup-text1\" style={{ textAlign: \"left\" }}>\n            ¿Ya eres miembro?{\" \"}\n            <span>\n              <Link to=\"/login\" style={{ color: \"#2190FF\" }}>\n                Iniciar sesión\n              </Link>\n            </span>\n          </div>\n          <div className=\"signup-form\">\n            <form onSubmit={handleSubmit} onReset={() => { setErrors({}); setShowErr(\"\"); }}>\n              {showErr && <div className=\"err\" style={{ color: \"red\", marginBottom: \"1rem\" }}>{showErr}</div>}\n\n              <div className=\"form-group\">\n                <label htmlFor=\"name\">Nombre</label>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  value={name}\n                  onChange={e => {\n                    setName(e.target.value);\n                    setFormData(prev => ({ ...prev, name: e.target.value }));\n                  }}\n                  className=\"form-control\"\n                  placeholder=\"Ingresa tu nombre\"\n                />\n                {errors.name && <small className=\"error\">{errors.name}</small>}\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"phone\">Teléfono</label>\n                <input\n                  type=\"tel\"\n                  name=\"phone\"\n                  id=\"phone\"\n                  value={phone}\n                  onChange={e => {\n                    setPhone(e.target.value);\n                    setFormData(prev => ({ ...prev, phone: e.target.value }));\n                  }}\n                  className=\"form-control\"\n                  placeholder=\"Ingresa tu número de teléfono\"\n                />\n                {errors.phone && <small className=\"error\">{errors.phone}</small>}\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Correo electrónico</label>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  value={email}\n                  onChange={e => {\n                    setEmail(e.target.value);\n                    setFormData(prev => ({ ...prev, email: e.target.value }));\n                  }}\n                  className=\"form-control\"\n                  placeholder=\"Ingresa tu correo electrónico\"\n                />\n                {errors.email && <small className=\"error\">{errors.email}</small>}\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Contraseña</label>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  value={password}\n                  onChange={e => {\n                    setPassword(e.target.value);\n                    setFormData(prev => ({ ...prev, password: e.target.value }));\n                  }}\n                  className=\"form-control\"\n                  placeholder=\"Ingresa tu contraseña\"\n                />\n                {errors.password && <small className=\"error\">{errors.password}</small>}\n              </div>\n\n              <div className=\"btn-group\">\n                <button type=\"submit\" className=\"btn btn-primary mb-2 mr-1\">\n                  Enviar\n                </button>\n                <button type=\"reset\" className=\"btn btn-danger mb-2\">\n                  Restablecer\n                </button>\n                <button\n        onClick={() => navigate(-1)}\n      >\n        ← Volver\n      </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import { useNavigate } from \"react-router-dom\";\nimport React, { useState, useEffect } from 'react';\nimport './Login.css'\nimport { API_URL } from \"../../config\";\n\nconst Login = () => {\n    const navigate = useNavigate()\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [passwordVisible, setPasswordVisible] = useState(false);\n\n    useEffect(() => {\n      if (sessionStorage.getItem('auth-token')) {\n        navigate('/');\n      }\n    }, [navigate]);\n\n    const togglePasswordVisibility = () => {\n        setPasswordVisible(!passwordVisible);\n    };\n    const [formData, setFormData] = useState({\n        email: \"\",\n        password: \"\"\n      });\n      const [errors, setErrors] = useState({});\n    \n      const handleChange = e => {\n        const { name, value } = e.target;\n        setFormData(f => ({ ...f, [name]: value }));\n      };\n    \n      const validate = () => {\n        const newErrors = {};\n        if (!email.includes(\"@\")) {\n          newErrors.email = \"Correo inválido.\";\n        }\n        if (password.length < 6) {\n          newErrors.password = \"La contraseña debe tener al menos 6 caracteres.\";\n        }\n        setErrors(newErrors);\n        return Object.keys(newErrors).length === 0;\n      };\n    \n      const loginUser = async (e) => {\n        e.preventDefault();\n        if (!validate()) return\n            try {\n                const res = await fetch(`${API_URL}/api/auth/login`, {\n                  method: 'POST',\n                  headers: { 'Content-Type': 'application/json' },\n                  body: JSON.stringify({ email, password }),\n                });\n                const json = await res.json();\n                if (json.authtoken) {\n                  alert(\"Inicio de sesión exitoso\");\n                  sessionStorage.setItem('auth-token', json.authtoken);\n                  sessionStorage.setItem('email', email);\n                  navigate('/');\n                  window.location.reload();\n                } else {\n                  if (json.errors) {\n                    json.errors.forEach(err => alert(err.msg));\n                  } else {\n                    alert(json.error);\n                  }\n                }\n              } catch (err) {\n                alert('No se pudo conectar con el servidor.');\n              }\n        \n      };\n    return (\n        <div>\n            \n            <div className=\"container\">\n                <div className=\"signup-grid\">\n                    <div className=\"signup-text\">\n                        <h1>Inicio de Sesión</h1>\n                    </div>\n                    <div\n                        className=\"signup-text1\"\n                        style={{ textAlign: \"left\" }}\n                    >\n                        ¿No tienes una cuenta?{\" \"}\n                        <span>\n                            <a\n                                href=\"/signup\"\n                                style={{ color: \"#2190FF\" }}\n                            >\n                                Regístrate\n                            </a>\n                        </span>\n                    </div>\n                    <div className=\"signup-form\">\n                        <form onSubmit={loginUser} onReset={() => setErrors({})}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"email\">Correo electrónico</label>\n                                <input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    id=\"email\"\n                                    required\n                                    value={email}\n                                    onChange={e => setEmail(e.target.value)}\n                                    className=\"form-control\"\n                                    placeholder=\"Ingresa tu correo electrónico\"\n                                />\n                                {errors.email && <small className=\"error\">{errors.email}</small>}\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"password\">Contraseña</label>\n                                <input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    id=\"password\"\n                                    required\n                                    value={password}\n                                    onChange={e => setPassword(e.target.value)}\n                                    className=\"form-control\"\n                                    placeholder=\"Ingresa tu contraseña\"\n                                />\n                                <span\n                                    className=\"password-visibility\"\n                                    onClick={() => togglePasswordVisibility()}\n                                    style={{ cursor: \"pointer\" }}\n                                >\n                                    👁️\n                                </span>\n                                {errors.password && <small className=\"error\">{errors.password}</small>}\n                            </div>\n                            <div className=\"btn-group\">\n                                <button type=\"submit\" className=\"btn btn-primary\">\n                                    Iniciar Sesión\n                                </button>\n                                <button type=\"reset\" className=\"btn btn-danger\">\n                                    Restablecer\n                                </button>\n                                <button\n                onClick={() => navigate(-1)}\n            >\n                ← Volver\n            </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            \n            </div>\n        </div>\n\n    );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\r\nimport './FindDoctorSearchIC.css';\r\nimport { useNavigate, Navigate } from 'react-router-dom';\r\n\r\n\r\nconst initSpeciality = [\r\n    'Dentist', 'Gynecologist/obstetrician', 'General Physician', 'Dermatologist', 'Ear-nose-throat (ent) Specialist', 'Homeopath', 'Ayurveda'\r\n]\r\n\r\nconst FindDoctorSearch = () => {\r\n    const [doctorResultHidden, setDoctorResultHidden] = useState(true);\r\n    const [searchDoctor, setSearchDoctor] = useState('');\r\n    const [specialities, setSpecialities] = useState(initSpeciality);\r\n    const navigate = useNavigate();\r\n    const handleDoctorSelect = (speciality) => {\r\n        setSearchDoctor(speciality);\r\n        setDoctorResultHidden(true);\r\n        navigate(`/instant-consultation?speciality=${speciality}`);\r\n        window.location.reload();\r\n    }\r\n    return (\r\n        <div className='finddoctor'>\r\n            <center>\r\n                <h1>Find a doctor and Consult instantly</h1>\r\n                <div>               <i style={{color:'#000000',fontSize:'20rem'}} className=\"fa fa-user-md\"></i>\r\n</div>                <div className=\"home-search-container\"  style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n                    <div className=\"doctor-search-box\">\r\n\r\n                        <input type=\"text\" className=\"search-doctor-input-box\" placeholder=\"Search doctors, clinics, hospitals, etc.\" onFocus={() => setDoctorResultHidden(false)} onBlur={() => setDoctorResultHidden(true)} value={searchDoctor} onChange={(e) => setSearchDoctor(e.target.value)} />\r\n                        \r\n                        <div className=\"findiconimg\"><img className='findIcon' src={process.env.PUBLIC_URL + '/images/search.svg'} alt=\"\"/></div>\r\n                        <div className=\"search-doctor-input-results\" hidden={doctorResultHidden}>\r\n                            {\r\n                                specialities.map(speciality => <div className=\"search-doctor-result-item\" key={speciality} onMouseDown={() => handleDoctorSelect(speciality)}>\r\n                                    <span><img src={process.env.PUBLIC_URL + '/images/search.svg'} alt=\"\" style={{height:\"10px\", width:\"10px\"}} width=\"12\" /></span>\r\n                                    <span>{speciality}</span>\r\n                                    <span>SPECIALITY</span>\r\n                                </div>)\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </center>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FindDoctorSearch","import React, { useState } from 'react'\r\n\r\nconst AppointmentForm = ({ doctorName, doctorSpeciality, onSubmit }) => {\r\n    const [name, setName] = useState('');\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    const [selectedSlot, setSelectedSlot] = useState(null);\r\n    const [date, setDate] = useState('');\r\n    const [time, setTime] = useState('');\r\n    const [slot, setSlot] = useState('');\r\n  \r\n    const handleSlotSelection = (slot) => {\r\n      setSelectedSlot(slot);\r\n    };\r\n  \r\n    const handleFormSubmit = (e) => {\r\n        const appointment = {\r\n          userName: name,\r\n          phoneNumber,\r\n          datetime: `${date}T${time}`,  // ISO\r\n          status: 'scheduled',\r\n          slot,\r\n        };\r\n\r\n        // 2) Guarda doctorData y appointmentData en localStorage\r\n        localStorage.setItem(\r\n          'doctorData',\r\n          JSON.stringify({ name: doctorName, speciality: doctorSpeciality })\r\n        );\r\n        localStorage.setItem(\r\n          doctorName,\r\n          JSON.stringify(appointment)\r\n        );\r\n        e.preventDefault();\r\n        onSubmit(appointment);\r\n        setName('');\r\n        setPhoneNumber('');\r\n        setDate('');\r\n        setTime('');\r\n        setSlot('');\r\n    };\r\n  \r\n    return (\r\n        <form onSubmit={handleFormSubmit} className=\"appointment-form\">\r\n          <h2>Book an Appointment with {doctorName}</h2>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Patient Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"phoneNumber\">Phone Number:</label>\r\n            <input\r\n              type=\"tel\"\r\n              id=\"phoneNumber\"\r\n              value={phoneNumber}\r\n              onChange={(e) => setPhoneNumber(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"date\">Appointment Date:</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"date\"\r\n              value={date}\r\n              onChange={(e) => setDate(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"time\">Appointment Time:</label>\r\n            <input\r\n              type=\"time\"\r\n              id=\"time\"\r\n              value={time}\r\n              onChange={(e) => setTime(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"slot\">Preferred Slot:</label>\r\n            <select\r\n              id=\"slot\"\r\n              value={slot}\r\n              onChange={(e) => setSlot(e.target.value)}\r\n              required\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select a slot\r\n              </option>\r\n              <option value=\"Morning\">Morning</option>\r\n              <option value=\"Afternoon\">Afternoon</option>\r\n              <option value=\"Evening\">Evening</option>\r\n            </select>\r\n          </div>\r\n          <button type=\"submit\">Confirm Appointment</button>\r\n        </form>\r\n      );\r\n    };\r\n    \r\n    export default AppointmentForm;\r\n","import React, { useState } from 'react';\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport './DoctorCard.css';\r\nimport AppointmentForm from '../AppointmentForm/AppointmentFormIC';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst DoctorCard = ({ name, speciality, experience, ratings, profilePic }) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  const handleBooking = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const handleCancel = (appointmentId) => {\r\n    setAppointments((prev) =>\r\n      prev.filter((appointment) => appointment.id !== appointmentId)\r\n    );\r\n    setShowModal(false);\r\n  };\r\n\r\n  const handleFormSubmit = (appointmentData) => {\r\n    const newAppointment = {\r\n      id: uuidv4(),\r\n      ...appointmentData,\r\n    };\r\n    setAppointments((prev) => [...prev, newAppointment]);\r\n    setShowModal(false);\r\n  };\r\n\r\n  const latestAppointmentId = appointments.length\r\n    ? appointments[appointments.length - 1].id\r\n    : null;\r\n\r\n  return (\r\n    <div className=\"doctor-card-container\">\r\n      <div className=\"doctor-card-details-container\">\r\n        <div className=\"doctor-card-profile-image-container\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"46\"\r\n            height=\"46\"\r\n            fill=\"currentColor\"\r\n            className=\"bi bi-person-fill\"\r\n            viewBox=\"0 0 16 16\"\r\n          >\r\n            <path d=\"M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\" />\r\n          </svg>\r\n        </div>\r\n        <div className=\"doctor-card-details\">\r\n          <div className=\"doctor-card-detail-name\">{name}</div>\r\n          <div className=\"doctor-card-detail-speciality\">{speciality}</div>\r\n          <div className=\"doctor-card-detail-experience\">\r\n            {experience} years experience\r\n          </div>\r\n          <div className=\"doctor-card-detail-consultationfees\">\r\n            Ratings: {ratings}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"doctor-card-options-container\">\r\n        {appointments.length > 0 ? (\r\n          <button\r\n            className=\"cancel-appointment-btn\"\r\n            onClick={() => handleCancel(latestAppointmentId)}\r\n          >\r\n            Cancel Appointment\r\n          </button>\r\n        ) : (\r\n          <button\r\n            className=\"book-appointment-btn\"\r\n            onClick={handleBooking}\r\n          >\r\n            <div>Book Appointment</div>\r\n            <div>No Booking Fee</div>\r\n          </button>\r\n        )}\r\n\r\n        <Popup\r\n          modal\r\n          open={showModal}\r\n          onClose={handleCloseModal}\r\n          contentStyle={{ padding: '20px', maxWidth: '500px' }}\r\n        >\r\n          {(close) => (\r\n            <div className=\"doctorbg\">\r\n              <button className=\"modal-close-btn\" onClick={() => { close(); handleCloseModal(); }}>\r\n                &times;\r\n              </button>\r\n\r\n              <div className=\"doctor-card-profile-image-container\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"46\"\r\n                  height=\"46\"\r\n                  fill=\"currentColor\"\r\n                  className=\"bi bi-person-fill\"\r\n                  viewBox=\"0 0 16 16\"\r\n                >\r\n                  <path d=\"M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\" />\r\n                </svg>\r\n              </div>\r\n              <div className=\"doctor-card-details\">\r\n                <div className=\"doctor-card-detail-name\">{name}</div>\r\n                <div className=\"doctor-card-detail-speciality\">\r\n                  {speciality}\r\n                </div>\r\n                <div className=\"doctor-card-detail-experience\">\r\n                  {experience} years experience\r\n                </div>\r\n                <div className=\"doctor-card-detail-consultationfees\">\r\n                  Ratings: {ratings}\r\n                </div>\r\n              </div>\r\n\r\n              {appointments.length > 0 ? (\r\n                <>\r\n                  <h3 style={{ textAlign: 'center' }}>\r\n                    Appointment Booked!\r\n                  </h3>\r\n                  {appointments.map((appointment) => (\r\n                    <div className=\"bookedInfo\" key={appointment.id}>\r\n                      <p>Name: {appointment.name}</p>\r\n                      <p>Phone: {appointment.phoneNumber}</p>\r\n                      <p>\r\n                        Date: {appointment.date} at {appointment.time} (\r\n                        {appointment.slot})\r\n                      </p>\r\n                      <button onClick={() => handleCancel(appointment.id)}>\r\n                        Cancel Here\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                </>\r\n              ) : (\r\n                /* Si no hay citas, mostramos el formulario */\r\n                <AppointmentForm\r\n                  doctorName={name}\r\n                  doctorSpeciality={speciality}\r\n                  onSubmit={handleFormSubmit}\r\n                />\r\n              )}\r\n            </div>\r\n          )}\r\n        </Popup>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './InstantConsultation.css';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport FindDoctorSearchIC from '../FindDoctorSearch/FindDoctorSearch';\r\nimport DoctorCardIC from '../DoctorCard/DoctorCard';\r\n\r\nconst InstantConsultation = () => {\r\n    const [searchParams] = useSearchParams();\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [filteredDoctors, setFilteredDoctors] = useState([]);\r\n    const [isSearched, setIsSearched] = useState(false);\r\n    \r\n    const getDoctorsDetails = () => {\r\n        fetch('https://api.npoint.io/9a5543d36f1460da2f63')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (searchParams.get('speciality')) {\r\n                // window.reload()\r\n                const filtered = data.filter(doctor => doctor.speciality.toLowerCase() === searchParams.get('speciality').toLowerCase());\r\n\r\n                setFilteredDoctors(filtered);\r\n                \r\n                setIsSearched(true);\r\n                window.reload()\r\n            } else {\r\n                setFilteredDoctors([]);\r\n                setIsSearched(false);\r\n            }\r\n            setDoctors(data);\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n    const handleSearch = (searchText) => {\r\n\r\n        if (searchText === '') {\r\n            setFilteredDoctors([]);\r\n            setIsSearched(false);\r\n            } else {\r\n                \r\n            const filtered = doctors.filter(\r\n                (doctor) =>\r\n                // \r\n                doctor.speciality.toLowerCase().includes(searchText.toLowerCase())\r\n                \r\n            );\r\n                \r\n            setFilteredDoctors(filtered);\r\n            setIsSearched(true);\r\n            window.location.reload()\r\n        }\r\n    };\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        getDoctorsDetails();\r\n        // const authtoken = sessionStorage.getItem(\"auth-token\");\r\n        // if (!authtoken) {\r\n        //     navigate(\"/login\");\r\n        // }\r\n    }, [searchParams])\r\n\r\n    return (\r\n        <center>\r\n            <div  className=\"searchpage-container\">\r\n            <FindDoctorSearchIC onSearch={handleSearch} />\r\n            <div className=\"search-results-container\">\r\n            {isSearched ? (\r\n                <center>\r\n                    <h2>{filteredDoctors.length} doctors are available {searchParams.get('location')}</h2>\r\n                    <h3>Book appointments with minimum wait-time & verified doctor details</h3>\r\n                    {filteredDoctors.length > 0 ? (\r\n                    filteredDoctors.map(doctor => <DoctorCardIC className=\"doctorcard\" {...doctor} key={doctor.name} />)\r\n                    ) : (\r\n                    <p>No doctors found.</p>\r\n                    )}\r\n                </center>\r\n                ) : (\r\n                ''\r\n                )}\r\n            </div>\r\n        </div>\r\n        </center>\r\n    )\r\n}\r\n\r\nexport default InstantConsultation","// src/components/BookingConsultation/BookingConsultation.js\nimport React, { useEffect, useState } from 'react';\nimport './InstantConsultation/InstantConsultation.css';                  // reutilizamos el mismo CSS\nimport FindDoctorSearch from \"./FindDoctorSearch/FindDoctorSearch\";\nimport DoctorCard       from './DoctorCard/DoctorCard';\n\nconst BookingConsultation = () => {\n  const [doctors, setDoctors]               = useState([]);\n  const [filteredDoctors, setFilteredDoctors] = useState([]);\n  const [isSearched, setIsSearched]         = useState(false);\n\n  // Traemos la lista de doctores al montar\n  useEffect(() => {\n    fetch('https://api.npoint.io/9a5543d36f1460da2f63')\n      .then(res => res.json())\n      .then(data => {\n        setDoctors(data);\n      })\n      .catch(err => console.error(err));\n  }, []);\n\n  // Función que recibe el texto de búsqueda desde FindDoctorSearch\n  const handleSearch = (searchText) => {\n    if (!searchText.trim()) {\n      setFilteredDoctors([]);\n      setIsSearched(false);\n      return;\n    }\n    const filtered = doctors.filter(doc =>\n      doc.speciality.toLowerCase().includes(searchText.toLowerCase())\n    );\n    setFilteredDoctors(filtered);\n    setIsSearched(true);\n  };\n\n  return (\n    <center>\n      <div className=\"searchpage-container\">\n        {/* 1) Campo de búsqueda */}\n        <FindDoctorSearch onSearch={handleSearch} />\n\n        {/* 2) Resultados */}\n        <div className=\"search-results-container\">\n          {isSearched && (\n            <>\n              <h2>{filteredDoctors.length} doctors available</h2>\n              <h3>\n                Book appointments with minimum wait-time & verified details\n              </h3>\n\n              {filteredDoctors.length > 0 ? (\n                filteredDoctors.map(doctor => (\n                  <DoctorCard\n                    className=\"doctorcard\"\n                    key={doctor.id || doctor.name}\n                    {...doctor}\n                  />\n                ))\n              ) : (\n                <p>No doctors found.</p>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n    </center>\n  );\n};\n\nexport default BookingConsultation;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navbar.css';\n\nconst Navbar = () => {\n  const [click, setClick] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n\n  const handleClick = () => setClick(!click);\n  const [open, setOpen] = useState(false);\n  const ref = useRef();\n\n  useEffect(() => {\n    const handleClickOutside = (e) => {\n      if (ref.current && !ref.current.contains(e.target)) {\n        setOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  const handleLogout = () => {\n    sessionStorage.removeItem('auth-token');\n    sessionStorage.removeItem('name');\n    sessionStorage.removeItem('email');\n    sessionStorage.removeItem('phone');\n    Object.keys(localStorage).forEach(key => {\n      if (key.startsWith('reviewFormData_')) {\n        localStorage.removeItem(key);\n      }\n    });\n    setIsLoggedIn(false);\n    setEmail(\"\");\n    setUsername(\"\");\n    window.location.reload();\n  };\n\n  useEffect(() => {\n    const storedEmail = sessionStorage.getItem('email');\n    if (storedEmail) {\n      setIsLoggedIn(true);\n      setEmail(storedEmail);\n      const namePart = storedEmail.split('@')[0];\n      setUsername(namePart);\n    }\n  }, []);\n\n  return (\n    <nav>\n      <div className=\"nav__logo\">\n        <Link to=\"/\">\n          StayHealthy <i style={{ color: '#2190FF' }} className=\"fa fa-user-md\"></i>\n        </Link>\n        <span>.</span>\n      </div>\n      <div className=\"nav__icon\" onClick={handleClick}>\n        <i className={click ? 'fa fa-times' : 'fa fa-bars'}></i>\n      </div>\n\n      <ul className={click ? 'nav__links active' : 'nav__links'}>\n        <li className=\"link\">\n          <Link to=\"/\">Inicio</Link>\n        </li>\n        <li className=\"link\">\n          <Link to=\"/citas\">Citas</Link>\n        </li>\n        <li className=\"link\">\n          <Link to=\"/healthblog\">Health Blog</Link>\n        </li>\n        <li className=\"link\">\n          <Link to=\"/reviews\">Reviews</Link>\n        </li>\n        <li className=\"link\">\n          <Link to=\"/booking\">Book App</Link>\n        </li>\n\n        {isLoggedIn ? (\n          <>\n            <li className=\"link user-menu\" ref={ref}>\n              <span className=\"nav__user\"  onClick={() => setOpen(!open)}>\n                Hola, {username}<span className=\"arrow\">{open ? '▲' : '▼'}</span>\n              </span>\n              {open && (\n                <ul className=\"menu-dropdown\">\n                  <li onClick={() => { setOpen(false) }}>\n                    <Link to='/profile'>Tu Perfil</Link>\n                  </li>\n                  <li onClick={() => { setOpen(false) }}>\n                    <Link to='/reports'>Tus Reportes</Link>\n                  </li>\n                  <li onClick={() => { setOpen(false); handleLogout(); }}>Cerrar Sesión</li>\n                </ul>\n              )}\n            </li>\n          </>\n        ) : (\n          <>\n            <li className=\"link\">\n              <Link to=\"/signup\">\n                <button className=\"btn1\">Registrarse</button>\n              </Link>\n            </li>\n            <li className=\"link\">\n              <Link to=\"/login\">\n                <button className=\"btn1\">Iniciar Sesión</button>\n              </Link>\n            </li>\n            <li className=\"link\">\n              <Link to=\"/instant-consultation\">\n                <button className=\"btn1\">Consulta Instantanea</button>\n              </Link>\n            </li>\n          </>\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React, { useEffect, useState } from 'react';\nimport Navbar from '../Navbar/Navbar';\nimport './Notification.css';  \n\nconst Notification = ({ children }) => {\n  // Estados\n  const [isLoggedIn, setIsLoggedIn]         = useState(false);\n  const [username, setUsername]             = useState(\"\");\n  const [doctorData, setDoctorData]         = useState(null);\n  const [appointmentData, setAppointmentData] = useState(null);\n  const [showNotification, setShowNotification] = useState(true);\n\n  useEffect(() => {\n    const storedUsername        = sessionStorage.getItem('email');\n    const storedDoctorData      = JSON.parse(localStorage.getItem('doctorData'));\n    const storedAppointmentData = JSON.parse(\n      localStorage.getItem(storedDoctorData?.name)\n    );\n\n    if (storedUsername) {\n      setIsLoggedIn(true);\n      setUsername(storedUsername);\n    }\n    if (storedDoctorData) {\n      setDoctorData(storedDoctorData);\n    }\n    if (storedAppointmentData) {\n      setAppointmentData(storedAppointmentData);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (appointmentData?.status === 'cancelled') {\n      setShowNotification(false);\n    }\n  }, [appointmentData]);\n\n  const formatDate = isoString => {\n    if (!isoString) return '';\n    const d = new Date(isoString);\n    return d.toLocaleDateString();     // p.e. \"14/5/2025\"\n  };\n  const formatTime = isoString => {\n    if (!isoString) return '';\n    const d = new Date(isoString);\n    return d.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n\n  return (\n    <div>\n      <Navbar />\n\n      {children}\n\n      {isLoggedIn && showNotification && appointmentData && (\n        <div className=\"notification-container\">\n          <button \n            className=\"notification-close-btn\"\n            onClick={() => setShowNotification(false)}\n          >\n            ×\n          </button>\n          <h4 className=\"notification-title\">Nueva Cita Reservada</h4>\n          <p><strong>Usuario:</strong> {username}</p>\n          <p><strong>Médico:</strong> {doctorData?.name}</p>\n          <p><strong>Fecha:</strong> {formatDate(appointmentData.datetime)}</p>\n          <p><strong>Hora:</strong> {formatTime(appointmentData.datetime)}</p>\n          <p><strong>Estado:</strong> {appointmentData.status}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Notification;\n","import React, { useState } from 'react';\nimport './FormFeedBack.css';\n\nconst FormFeedBack = ({ doctor, onClose, onSubmit }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    feedback: '',\n    rating: 0,\n  });\n\n  const handleRatingChange = (ratingValue) => {\n    setFormData((prev) => ({ ...prev, rating: ratingValue }));\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(doctor.id, formData)\n    setFormData(null)\n    onClose();\n  };\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n        <h2>Comentarios para {doctor.name}</h2>\n        <p>Especialidad: {doctor.speciality}</p>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            value={formData.name}\n            onChange={handleChange}\n            className=\"form-control\"\n            placeholder=\"Ingresa tu nombre\"\n            required\n          />\n          <textarea\n            name=\"feedback\"\n            id=\"feedback\"\n            value={formData.feedback}\n            onChange={handleChange}\n            placeholder=\"Escribe tu opinión...\"\n            required\n          />\n          <div className=\"rating\">\n            <label>Rating:</label>\n            {[1, 2, 3, 4, 5].map((star) => (\n              <span\n                key={star}\n                onClick={() => handleRatingChange(star)}\n                className={formData.rating >= star ? 'star selected' : 'star'}\n                style={{ cursor: 'pointer', fontSize: '1.5rem', color: formData.rating >= star ? '#FFD700' : '#ccc' }}\n              >\n                ★\n              </span>\n            ))}\n          </div>\n          <div className=\"buttons\">\n            <button type=\"submit\" className=\"submit-button\">Enviar</button>\n            <button type=\"button\" className=\"cancel-button\" onClick={onClose}>Cancelar</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );  \n}\n\nexport default FormFeedBack","import './ReviewForm.css';\nimport React, { useState } from 'react';\nimport FormFeedBack from './FormFeedBack'\n\nconst dummyData = [\n  { id: 1, name: 'Dr. John Doe', speciality: 'Cardiology', reviewed: false, feedback: '', rating: 0 },\n  { id: 2, name: 'Dr. Jane Smith', speciality: 'Dermatology', reviewed: false, feedback: '', rating: 0 },\n];\n\nconst ReviewForm = () => {\n  const [reviews, setReviews] = useState(dummyData)\n\tconst [showForm, setShowForm] = useState(false);\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\n  \n  const handleOpen = (doctor) => {\n    setSelectedDoctor(doctor);\n    setShowForm(true);\n  };  \n  const handleClose = () => {\n    setShowForm(false);\n    setSelectedDoctor(null);\n  };\n  const handleSubmit = (id, formData) => {\n    console.log('form', id, formData)\n    setReviews(prev => prev.map(doc => \n      doc.id === id\n        ? { ...doc, rating:formData.rating, reviewed: true, feedback: `${formData.name}: ${formData.feedback}` }\n        : doc\n    ));\n  };\n\n  return (\n     <div className=\"reviews-container\">\n      <h1>Reviews</h1>\n      <table className=\"reviews-table\">\n        <thead>\n          <tr>\n            <th>Serial Number</th>\n            <th>Doctor Name</th>\n            <th>Doctor Speciality</th>\n            <th>Provide feedback</th>\n            <th>Review Given</th>\n          </tr>\n        </thead>\n        <tbody>\n          {reviews.map((doc, idx) => (\n            <tr key={doc.id}>\n              <td>{idx + 1}</td>\n              <td>{doc.name}</td>\n              <td>{doc.speciality}</td>\n              <td>\n                <button \n                  className=\"feedback-button\" \n                  onClick={() => handleOpen(doc)}\n                  disabled={doc.reviewed}\n                >\n                  Click Here\n                </button>\n              </td>\n              <td>{doc.reviewed ? `${doc.feedback} (Rating: ${doc.rating}/5)` : 'WithOut FeedBack'}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {showForm && selectedDoctor && (\n        <FormFeedBack doctor={selectedDoctor} onClose={handleClose} onSubmit={handleSubmit}/>\n      )}\n    </div>\n  );\n};\n\nexport default ReviewForm;","// Following code has been commented with appropriate comments for your reference. \n// Import necessary modules from React and other files\nimport React, { useEffect, useState } from \"react\";\nimport { API_URL } from \"../../config\";\nimport { useNavigate } from \"react-router-dom\";\nimport './ProfileCard.css'\n// Define a Function component called ProfileForm\nconst ProfileForm = () => {\n  // Set up state variables using the useState hook\n  const [userDetails, setUserDetails] = useState({});\n  const [updatedDetails, setUpdatedDetails] = useState({});\n  const [editMode, setEditMode] = useState(false);\n  \n  // Access the navigation functionality from React Router\n  const navigate = useNavigate();\n  \n  // Use the useEffect hook to fetch user profile data when the component mounts or updates\n  useEffect(() => {\n    const authtoken = sessionStorage.getItem(\"auth-token\");\n    if (!authtoken) {\n      navigate(\"/login\");\n    } else {\n      fetchUserProfile();\n    }\n  }, [navigate]);\n\n  // Function to fetch user profile data from the API\n  const fetchUserProfile = async () => {\n    try {\n      const authtoken = sessionStorage.getItem(\"auth-token\");\n      const email = sessionStorage.getItem(\"email\"); // Get the email from session storage\n\n      if (!authtoken) {\n        navigate(\"/login\");\n      } else {\n        const response = await fetch(`${API_URL}/api/auth/user`, {\n          headers: {\n            \"Authorization\": `Bearer ${authtoken}`,\n            \"Email\": email, // Add the email to the headers\n          },\n        });\n        if (response.ok) {\n          const user = await response.json();\n          setUserDetails(user);\n          setUpdatedDetails(user);\n        } else {\n          // Handle error case\n          throw new Error(\"Failed to fetch user profile\");\n        }\n      }\n    } catch (error) {\n      console.error(error);\n      // Handle error case\n    }\n  };\n\n  // Function to enable edit mode for profile details\n  const handleEdit = () => {\n    setEditMode(true);\n  };\n\n  // Function to update state when user inputs new data\n  const handleInputChange = (e) => {\n    setUpdatedDetails({\n      ...updatedDetails,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Function to handle form submission when user saves changes\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const authtoken = sessionStorage.getItem(\"auth-token\");\n      const email = sessionStorage.getItem(\"email\"); // Get the email from session storage\n\n      if (!authtoken || !email) {\n        navigate(\"/login\");\n        return;\n      }\n\n      const payload = { ...updatedDetails };\n      const response = await fetch(`${API_URL}/api/auth/user`, {\n        method: \"PUT\",\n        headers: {\n          \"Authorization\": `Bearer ${authtoken}`,\n          \"Content-Type\": \"application/json\",\n          \"Email\": email,\n        },\n        body: JSON.stringify(payload),\n      });\n\n      if (response.ok) {\n        // Update the user details in session storage\n        sessionStorage.setItem(\"name\", updatedDetails.name);\n        sessionStorage.setItem(\"phone\", updatedDetails.phone);\n\n        setUserDetails(updatedDetails);\n        setEditMode(false);\n        // Display success message to the user\n        alert(`Profile Updated Successfully!`);\n        navigate(\"/\");\n      } else {\n        // Handle error case\n        throw new Error(\"Failed to update profile\");\n      }\n    } catch (error) {\n      console.error(error);\n      // Handle error case\n    }\n  };\n\n  // Render the profile form with different sections based on edit mode\n  return (\n    <div className=\"profile-container\">\n    {editMode ? (\n      <form onSubmit={handleSubmit}>\n        <h1>Editar Perfil</h1>\n        <label>\n          Nombre\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={updatedDetails.name}\n            onChange={handleInputChange}\n            required\n          />\n        </label>\n        <label>\n          Teléfono\n          <input\n            type=\"text\"\n            name=\"phone\"\n            value={updatedDetails.phone}\n            onChange={handleInputChange}\n            required\n          />\n        </label>\n        <label>\n          Correo electrónico\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={updatedDetails.email}\n            disabled\n          />\n        </label>\n        <button type=\"submit\">Guardar</button>\n      </form>\n    ) : (\n      <div className=\"profile-details\">\n        <h1>Mi Perfil</h1>\n        <p><strong>Nombre:</strong> {userDetails.name}</p>\n        <p><strong>Teléfono:</strong> {userDetails.phone}</p>\n        <p><strong>Correo:</strong> {userDetails.email}</p>\n        <button onClick={handleEdit}>Editar Perfil</button>\n      </div>\n    )}\n  </div>\n  );  \n};\n\n// Export the ProfileForm component as the default export\nexport default ProfileForm;\n","// src/components/ReportLayout.jsx\nimport React from 'react'\n\nconst ReportLayout = ({ serial, doctorName, speciality, reportFile }) => {\n  return (\n    <tr className=\"report-row\">\n      <td>{serial}</td>\n      <td>{doctorName}</td>\n      <td>{speciality}</td>\n      <td>\n        {/* abre en nueva pestaña */}\n        <a\n          href={reportFile}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"btn btn-view\"\n        >\n          View Report\n        </a>\n      </td>\n      <td>\n        {/* fuerza descarga del PDF */}\n        <a\n          href={reportFile}\n          download=\"patient_report.pdf\"\n          className=\"btn btn-download\"\n        >\n          Download Report\n        </a>\n      </td>\n    </tr>\n  )\n}\n\nexport default ReportLayout\n","// src/components/ReportsLayout.jsx\nimport React from 'react'\nimport ReportLayout from './ReportLayout'\nimport './ReportsLayout.css'\n\nconst ReportsLayout = () => {\n  // datos quemados de ejemplo\n  const reports = [\n    {\n      id: '1',\n      doctorName: 'Dr. John Doe',\n      speciality: 'Cardiology',\n      // asumimos que el PDF está en public/patient_report.pdf\n      reportFile: '/patient_report.pdf'\n    },\n    {\n      id: '2',\n      doctorName: 'Dr. Jane Smith',\n      speciality: 'Dermatology',\n      reportFile: '/patient_report.pdf'\n    }\n  ]\n\n  return (\n    <div className=\"reports-container\">\n      <h2 className=\"reports-title\">Reports</h2>\n      <table className=\"reports-table\">\n        <thead>\n          <tr>\n            <th>Serial Number</th>\n            <th>Doctor Name</th>\n            <th>Doctor Speciality</th>\n            <th>View Report</th>\n            <th>Download Report</th>\n          </tr>\n        </thead>\n        <tbody>\n          {reports.map((r, i) => (\n            <ReportLayout\n              key={r.id}\n              serial={i + 1}\n              doctorName={r.doctorName}\n              speciality={r.speciality}\n              reportFile={r.reportFile}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default ReportsLayout\n","\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nimport LandingPage from './Components/Landing_Page/LandingPage';\nimport SignUp from './Components/Sign_Up/SignUp';\nimport Login from './Components/Login/Login';\nimport InstantConsultation from \"./Components/InstantConsultation/InstantConsultation\";\nimport BookingConsultation from \"./Components/BookingConsultation\";\nimport Notification from \"./Components/Notification/Notification\"\nimport ReviewForm from \"./Components/ReviewForm/ReviewForm\";\nimport ProfileForm from \"./Components/ProfileCard/ProfileCard\";\nimport ReportsLayout from \"./Components/ReportsLayout/ReportsLayout\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <BrowserRouter>\n          <Notification>\n            <Routes>\n                <Route path=\"/\" element={<LandingPage />} />\n                <Route path=\"/signup\" element={<SignUp />} />\n                <Route path=\"/login\" element={<Login />} />\n                <Route path=\"/instant-consultation\" element={<InstantConsultation />} />\n                <Route path=\"/booking\"              element={<BookingConsultation />} /> \n                <Route path=\"/reviews\" element={<ReviewForm/>}/>\n                <Route path=\"/reports\" element={<ReportsLayout/>}/>\n                <Route path=\"/profile\" element={<ProfileForm/>}/>\n            </Routes>\n          </Notification>\n        </BrowserRouter>\n    </div>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"names":["Landing_Page","React","className","href","API_URL","console","log","SignUp","navigate","useNavigate","name","setName","useState","email","setEmail","phone","setPhone","password","setPassword","formData","setFormData","errors","setErrors","showErr","setShowErr","style","marginTop","textAlign","Link","to","color","onSubmit","async","e","preventDefault","validate","newErrors","trim","test","includes","length","Object","keys","res","fetch","method","headers","body","JSON","stringify","json","authtoken","sessionStorage","setItem","window","location","reload","map","err","msg","join","error","onReset","marginBottom","htmlFor","type","id","value","onChange","target","prev","placeholder","onClick","Login","passwordVisible","setPasswordVisible","useEffect","getItem","alert","forEach","required","cursor","initSpeciality","FindDoctorSearch","doctorResultHidden","setDoctorResultHidden","searchDoctor","setSearchDoctor","specialities","setSpecialities","fontSize","display","justifyContent","alignItems","onFocus","onBlur","src","process","env","PUBLIC_URL","alt","hidden","speciality","key","onMouseDown","handleDoctorSelect","height","width","_ref","doctorName","doctorSpeciality","phoneNumber","setPhoneNumber","selectedSlot","setSelectedSlot","date","setDate","time","setTime","slot","setSlot","appointment","userName","datetime","status","localStorage","disabled","experience","ratings","profilePic","showModal","setShowModal","appointments","setAppointments","handleCloseModal","handleCancel","appointmentId","filter","handleFormSubmit","appointmentData","newAppointment","uuidv4","latestAppointmentId","xmlns","fill","viewBox","d","handleBooking","Popup","modal","open","onClose","contentStyle","padding","maxWidth","close","AppointmentForm","InstantConsultation","searchParams","useSearchParams","doctors","setDoctors","filteredDoctors","setFilteredDoctors","isSearched","setIsSearched","then","data","get","filtered","doctor","toLowerCase","catch","FindDoctorSearchIC","onSearch","searchText","DoctorCardIC","_extends","BookingConsultation","doc","DoctorCard","Navbar","click","setClick","isLoggedIn","setIsLoggedIn","username","setUsername","setOpen","ref","useRef","handleClickOutside","current","contains","document","addEventListener","removeEventListener","storedEmail","namePart","split","handleClick","removeItem","startsWith","children","doctorData","setDoctorData","setAppointmentData","showNotification","setShowNotification","storedUsername","storedDoctorData","parse","storedAppointmentData","isoString","Date","toLocaleDateString","formatDate","toLocaleTimeString","hour","minute","formatTime","feedback","rating","handleChange","star","handleRatingChange","ratingValue","dummyData","reviewed","ReviewForm","reviews","setReviews","showForm","setShowForm","selectedDoctor","setSelectedDoctor","idx","FormFeedBack","handleClose","handleSubmit","ProfileForm","userDetails","setUserDetails","updatedDetails","setUpdatedDetails","editMode","setEditMode","fetchUserProfile","response","ok","Error","user","handleInputChange","payload","handleEdit","serial","reportFile","rel","download","ReportsLayout","r","i","ReportLayout","createElement","BrowserRouter","Notification","Routes","Route","path","element","LandingPage","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById","render","App","reportWebVitals"],"sourceRoot":""}